local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local localplayer = Players.LocalPlayer
local camera = workspace.CurrentCamera
local cache = {}

local bones = {
    {"Head", "UpperTorso"}, {"UpperTorso", "RightUpperArm"}, {"RightUpperArm", "RightLowerArm"},
    {"RightLowerArm", "RightHand"}, {"UpperTorso", "LeftUpperArm"}, {"LeftUpperArm", "LeftLowerArm"},
    {"LeftLowerArm", "LeftHand"}, {"UpperTorso", "LowerTorso"}, {"LowerTorso", "LeftUpperLeg"},
    {"LeftUpperLeg", "LeftLowerLeg"}, {"LeftLowerLeg", "LeftFoot"}, {"LowerTorso", "RightUpperLeg"},
    {"RightUpperLeg", "RightLowerLeg"}, {"RightLowerLeg", "RightFoot"}
}

local ESP_SETTINGS = {
    BoxOutlineColor = Color3.new(0, 0, 0), BoxColor = Color3.new(1, 1, 1), NameColor = Color3.new(1, 1, 1),
    HealthOutlineColor = Color3.new(0, 0, 0), HealthHighColor = Color3.new(0, 1, 0), HealthLowColor = Color3.new(1, 0, 0),
    CharSize = Vector2.new(4, 6), Teamcheck = false, WallCheck = false, Enabled = false, ShowBox = false,
    BoxType = "2D", ShowName = false, ShowHealth = false, ShowDistance = false, ShowSkeletons = false,
    ShowTracer = false, TracerColor = Color3.fromRGB(98,105,188), TracerThickness = 2, SkeletonsColor = Color3.new(1, 1, 1),
    TracerPosition = "Bottom",
}

local function create(class, properties)
    local drawing = Drawing.new(class)
    for property, value in pairs(properties) do
        drawing[property] = value
    end
    return drawing
end

local function createesp(player)
    local esp = {
        tracer = create("Line", {Thickness = ESP_SETTINGS.TracerThickness, Color = ESP_SETTINGS.TracerColor, Transparency = 0.5}),
        boxoutline = create("Square", {Color = ESP_SETTINGS.BoxOutlineColor, Thickness = 3, Filled = false}),
        box = create("Square", {Color = ESP_SETTINGS.BoxColor, Thickness = 1, Filled = false}),
        name = create("Text", {Color = ESP_SETTINGS.NameColor, Outline = true, Center = true, Size = 13, Font = Drawing.Fonts.Arcade}),
        healthoutline = create("Line", {Thickness = 3, Color = ESP_SETTINGS.HealthOutlineColor}),
        health = create("Line", {Thickness = 2}),
        distance = create("Text", {Color = Color3.new(1, 1, 1), Size = 13, Outline = true, Center = true, Font = Drawing.Fonts.Arcade}),
        boxlines = {}, skeletonlines = {}
    }
    cache[player] = esp
end

local function isbehindwall(player)
    local character = player.Character
    local rootpart = character and character:FindFirstChild("HumanoidRootPart")
    if rootpart then
        local ray = Ray.new(camera.CFrame.Position, (rootpart.Position - camera.CFrame.Position).Unit * (rootpart.Position - camera.CFrame.Position).Magnitude)
        local hit = workspace:FindPartOnRayWithIgnoreList(ray, {localplayer.Character, character})
        return hit and hit:IsA("Part")
    end
end

local function removeesp(player)
    local esp = cache[player]
    if esp then
        for _, drawing in pairs(esp) do
            if drawing.Remove then drawing:Remove() end
        end
        cache[player] = nil
    end
end

local function updateesp()
    for player, esp in pairs(cache) do
        local character, team = player.Character, player.Team
        local rootpart, head, humanoid = character and character:FindFirstChild("HumanoidRootPart"), character and character:FindFirstChild("Head"), character and character:FindFirstChild("Humanoid")
        local isbehind = ESP_SETTINGS.WallCheck and isbehindwall(player)
        if rootpart and head and humanoid and not isbehind and ESP_SETTINGS.Enabled and (not ESP_SETTINGS.Teamcheck or team ~= localplayer.Team) then
            local position, onscreen = camera:WorldToViewportPoint(rootpart.Position)
            if onscreen then
                local hrp2d = camera:WorldToViewportPoint(rootpart.Position)
                local charsizex, charsizey = ESP_SETTINGS.CharSize.X, ESP_SETTINGS.CharSize.Y
                local boxsize = Vector2.new(math.floor(charsizex), math.floor(charsizey))
                local boxpos = Vector2.new(math.floor(hrp2d.X - charsizex / 2), math.floor(hrp2d.Y - charsizey / 2))

                esp.name.Visible = ESP_SETTINGS.ShowName
                esp.name.Text = player.Name
                esp.name.Position = Vector2.new(boxpos.X + boxsize.X / 2, boxpos.Y - 16)

                esp.box.Visible = ESP_SETTINGS.ShowBox
                esp.box.Size = boxsize
                esp.box.Position = boxpos

                esp.tracer.Visible = ESP_SETTINGS.ShowTracer
                esp.tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
                esp.tracer.To = Vector2.new(hrp2d.X, hrp2d.Y)
            end
        else
            for _, drawing in pairs(esp) do
                if drawing.Remove then drawing:Remove() end
            end
        end
    end
end

for _, player in ipairs(Players:GetPlayers()) do
    if player ~= localplayer then createesp(player) end
end
Players.PlayerAdded:Connect(function(player) if player ~= localplayer then createesp(player) end end)
Players.PlayerRemoving:Connect(removeesp)
RunService.RenderStepped:Connect(updateesp)
return ESP_SETTINGS
